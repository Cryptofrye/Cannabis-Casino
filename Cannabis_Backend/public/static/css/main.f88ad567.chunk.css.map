{"version":3,"sources":["D:/Cannavis/front4/src/component/common/Header/D:/Cannavis/front4/src/component/common/Header/D:/Cannavis/front4/src/component/common/Header/Header.scss","D:/Cannavis/front4/src/component/common/Header/D:/Cannavis/front4/src/component/common/Header/D:/Cannavis/front4/node_modules/include-media/dist/_include-media.scss","D:/Cannavis/front4/src/component/common/Header/D:/Cannavis/front4/src/component/common/Header/D:/Cannavis/front4/node_modules/open-color/open-color.scss","D:/Cannavis/front4/src/component/common/LoginModal/D:/Cannavis/front4/src/component/common/LoginModal/D:/Cannavis/front4/src/component/common/LoginModal/LoginModal.scss","D:/Cannavis/front4/src/component/common/LoginModal/D:/Cannavis/front4/src/component/common/LoginModal/D:/Cannavis/front4/node_modules/include-media/dist/_include-media.scss","D:/Cannavis/front4/src/component/common/LoginModal/D:/Cannavis/front4/src/component/common/LoginModal/D:/Cannavis/front4/node_modules/open-color/open-color.scss","D:/Cannavis/front4/src/component/UserInterface/D:/Cannavis/front4/src/component/UserInterface/D:/Cannavis/front4/src/component/UserInterface/UserInterface.scss","D:/Cannavis/front4/src/component/ProfileModal/D:/Cannavis/front4/src/component/ProfileModal/D:/Cannavis/front4/src/component/ProfileModal/ProfileModal.scss","D:/Cannavis/front4/src/component/common/Banner/D:/Cannavis/front4/src/component/common/Banner/D:/Cannavis/front4/src/component/common/Banner/Banner.scss","D:/Cannavis/front4/src/component/common/Footer/D:/Cannavis/front4/src/component/common/Footer/D:/Cannavis/front4/src/component/common/Footer/Footer.scss","D:/Cannavis/front4/src/component/Rank/RankItem/D:/Cannavis/front4/src/component/Rank/RankItem/D:/Cannavis/front4/src/component/Rank/RankItem/RankItem.scss","D:/Cannavis/front4/src/component/Rank/RankTop/D:/Cannavis/front4/src/component/Rank/RankTop/D:/Cannavis/front4/src/component/Rank/RankTop/RankTop.scss","D:/Cannavis/front4/src/containers/rank/D:/Cannavis/front4/src/containers/rank/D:/Cannavis/front4/src/containers/rank/RankContainer.scss","D:/Cannavis/front4/src/containers/Lotto/D:/Cannavis/front4/src/containers/Lotto/D:/Cannavis/front4/src/containers/Lotto/Lotto.scss","D:/Cannavis/front4/src/component/LottoMain/D:/Cannavis/front4/src/component/LottoMain/D:/Cannavis/front4/src/component/LottoMain/LottoMain.scss","D:/Cannavis/front4/src/component/Minesweeper/D:/Cannavis/front4/src/component/Minesweeper/D:/Cannavis/front4/src/component/Minesweeper/Minesweeper.scss","D:/Cannavis/front4/src/component/MyPage/D:/Cannavis/front4/src/component/MyPage/D:/Cannavis/front4/src/component/MyPage/MyPage.scss","D:/Cannavis/front4/src/component/common/Shop/D:/Cannavis/front4/src/component/common/Shop/D:/Cannavis/front4/src/component/common/Shop/Shop.scss","D:/Cannavis/front4/src/D:/Cannavis/front4/src/D:/Cannavis/front4/src/index.scss"],"names":[],"mappings":"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","file":"main.f88ad567.chunk.css","sourcesContent":["@import '../../../../src/styles/utils.scss';\r\n\r\n.header {\r\n    background: #000000;\r\n    width: 100vw;\r\n    .header-content { \r\n        height: 7rem;\r\n        width: 1400px;\r\n        margin: 0 auto; // 중앙 정렬\r\n        padding-right: 3rem;\r\n\r\n        // 내부 아이템 세로 중앙 정렬\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    \r\n        // 반응형 레이아웃\r\n        @include media(\"<wide\") {\r\n          width: 100%;\r\n        }\r\n        @include media(\"<medium\") {\r\n          padding-left: 1rem;\r\n          padding-right: 1rem;\r\n        }\r\n        \r\n        .brand {\r\n          img {\r\n            width: 15rem;\r\n          }\r\n        }\r\n    \r\n        .right {\r\n          color: white;\r\n          font-size: 1.2rem;\r\n          font-weight: 600;\r\n          display: flex;\r\n          margin-left: 20rem;\r\n          align-items: center;\r\n          \r\n          @include media(\"<large\") {\r\n            display: none;\r\n          }\r\n          \r\n          a {\r\n            &:hover {\r\n              transition: all 0.3s ease-in;\r\n              background-color: #201C29;\r\n            }\r\n            &:nth-child(6){\r\n              border-right: 1px solid #201c29;\r\n            }\r\n            .item {\r\n              display: flex; \r\n              width: 8rem;\r\n              height: 7rem;\r\n              border-left: 1px solid #201c29;\r\n              padding: 0 1rem 0 1rem;\r\n              align-items: center;\r\n              justify-content: center;\r\n              white-space: nowrap;  \r\n            }\r\n          }\r\n          \r\n          .login {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            padding: 1rem 3rem 1rem 3rem;\r\n            border-radius: 30px;\r\n            margin-left: 1rem;\r\n            white-space: nowrap;\r\n            background: $oc-gray-7;\r\n            cursor: pointer;\r\n            &:hover {\r\n              transition: all 0.3s ease-in;\r\n              background: $oc-violet-3;\r\n            }\r\n          }\r\n        }\r\n      }\r\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","//\n//\n//  𝗖 𝗢 𝗟 𝗢 𝗥\n//  v 1.6.3\n//\n//  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n\n//  General\n//  ───────────────────────────────────\n\n$oc-white:         #ffffff;\n$oc-black:         #000000;\n\n\n//  Gray\n//  ───────────────────────────────────\n\n$oc-gray-list: (\n  \"0\": #f8f9fa,\n  \"1\": #f1f3f5,\n  \"2\": #e9ecef,\n  \"3\": #dee2e6,\n  \"4\": #ced4da,\n  \"5\": #adb5bd,\n  \"6\": #868e96,\n  \"7\": #495057,\n  \"8\": #343a40,\n  \"9\": #212529\n);\n\n$oc-gray-0: map-get($oc-gray-list, \"0\");\n$oc-gray-1: map-get($oc-gray-list, \"1\");\n$oc-gray-2: map-get($oc-gray-list, \"2\");\n$oc-gray-3: map-get($oc-gray-list, \"3\");\n$oc-gray-4: map-get($oc-gray-list, \"4\");\n$oc-gray-5: map-get($oc-gray-list, \"5\");\n$oc-gray-6: map-get($oc-gray-list, \"6\");\n$oc-gray-7: map-get($oc-gray-list, \"7\");\n$oc-gray-8: map-get($oc-gray-list, \"8\");\n$oc-gray-9: map-get($oc-gray-list, \"9\");\n\n\n//  Red\n//  ───────────────────────────────────\n\n$oc-red-list: (\n  \"0\": #fff5f5,\n  \"1\": #ffe3e3,\n  \"2\": #ffc9c9,\n  \"3\": #ffa8a8,\n  \"4\": #ff8787,\n  \"5\": #ff6b6b,\n  \"6\": #fa5252,\n  \"7\": #f03e3e,\n  \"8\": #e03131,\n  \"9\": #c92a2a\n);\n\n$oc-red-0: map-get($oc-red-list, \"0\");\n$oc-red-1: map-get($oc-red-list, \"1\");\n$oc-red-2: map-get($oc-red-list, \"2\");\n$oc-red-3: map-get($oc-red-list, \"3\");\n$oc-red-4: map-get($oc-red-list, \"4\");\n$oc-red-5: map-get($oc-red-list, \"5\");\n$oc-red-6: map-get($oc-red-list, \"6\");\n$oc-red-7: map-get($oc-red-list, \"7\");\n$oc-red-8: map-get($oc-red-list, \"8\");\n$oc-red-9: map-get($oc-red-list, \"9\");\n\n\n//  Pink\n//  ───────────────────────────────────\n\n$oc-pink-list: (\n  \"0\": #fff0f6,\n  \"1\": #ffdeeb,\n  \"2\": #fcc2d7,\n  \"3\": #faa2c1,\n  \"4\": #f783ac,\n  \"5\": #f06595,\n  \"6\": #e64980,\n  \"7\": #d6336c,\n  \"8\": #c2255c,\n  \"9\": #a61e4d\n);\n\n$oc-pink-0: map-get($oc-pink-list, \"0\");\n$oc-pink-1: map-get($oc-pink-list, \"1\");\n$oc-pink-2: map-get($oc-pink-list, \"2\");\n$oc-pink-3: map-get($oc-pink-list, \"3\");\n$oc-pink-4: map-get($oc-pink-list, \"4\");\n$oc-pink-5: map-get($oc-pink-list, \"5\");\n$oc-pink-6: map-get($oc-pink-list, \"6\");\n$oc-pink-7: map-get($oc-pink-list, \"7\");\n$oc-pink-8: map-get($oc-pink-list, \"8\");\n$oc-pink-9: map-get($oc-pink-list, \"9\");\n\n\n//  Grape\n//  ───────────────────────────────────\n\n$oc-grape-list: (\n  \"0\": #f8f0fc,\n  \"1\": #f3d9fa,\n  \"2\": #eebefa,\n  \"3\": #e599f7,\n  \"4\": #da77f2,\n  \"5\": #cc5de8,\n  \"6\": #be4bdb,\n  \"7\": #ae3ec9,\n  \"8\": #9c36b5,\n  \"9\": #862e9c\n);\n\n$oc-grape-0: map-get($oc-grape-list, \"0\");\n$oc-grape-1: map-get($oc-grape-list, \"1\");\n$oc-grape-2: map-get($oc-grape-list, \"2\");\n$oc-grape-3: map-get($oc-grape-list, \"3\");\n$oc-grape-4: map-get($oc-grape-list, \"4\");\n$oc-grape-5: map-get($oc-grape-list, \"5\");\n$oc-grape-6: map-get($oc-grape-list, \"6\");\n$oc-grape-7: map-get($oc-grape-list, \"7\");\n$oc-grape-8: map-get($oc-grape-list, \"8\");\n$oc-grape-9: map-get($oc-grape-list, \"9\");\n\n\n//  Violet\n//  ───────────────────────────────────\n\n$oc-violet-list: (\n  \"0\": #f3f0ff,\n  \"1\": #e5dbff,\n  \"2\": #d0bfff,\n  \"3\": #b197fc,\n  \"4\": #9775fa,\n  \"5\": #845ef7,\n  \"6\": #7950f2,\n  \"7\": #7048e8,\n  \"8\": #6741d9,\n  \"9\": #5f3dc4\n);\n\n$oc-violet-0: map-get($oc-violet-list, \"0\");\n$oc-violet-1: map-get($oc-violet-list, \"1\");\n$oc-violet-2: map-get($oc-violet-list, \"2\");\n$oc-violet-3: map-get($oc-violet-list, \"3\");\n$oc-violet-4: map-get($oc-violet-list, \"4\");\n$oc-violet-5: map-get($oc-violet-list, \"5\");\n$oc-violet-6: map-get($oc-violet-list, \"6\");\n$oc-violet-7: map-get($oc-violet-list, \"7\");\n$oc-violet-8: map-get($oc-violet-list, \"8\");\n$oc-violet-9: map-get($oc-violet-list, \"9\");\n\n\n//  Indigo\n//  ───────────────────────────────────\n\n$oc-indigo-list: (\n  \"0\": #edf2ff,\n  \"1\": #dbe4ff,\n  \"2\": #bac8ff,\n  \"3\": #91a7ff,\n  \"4\": #748ffc,\n  \"5\": #5c7cfa,\n  \"6\": #4c6ef5,\n  \"7\": #4263eb,\n  \"8\": #3b5bdb,\n  \"9\": #364fc7\n);\n\n$oc-indigo-0: map-get($oc-indigo-list, \"0\");\n$oc-indigo-1: map-get($oc-indigo-list, \"1\");\n$oc-indigo-2: map-get($oc-indigo-list, \"2\");\n$oc-indigo-3: map-get($oc-indigo-list, \"3\");\n$oc-indigo-4: map-get($oc-indigo-list, \"4\");\n$oc-indigo-5: map-get($oc-indigo-list, \"5\");\n$oc-indigo-6: map-get($oc-indigo-list, \"6\");\n$oc-indigo-7: map-get($oc-indigo-list, \"7\");\n$oc-indigo-8: map-get($oc-indigo-list, \"8\");\n$oc-indigo-9: map-get($oc-indigo-list, \"9\");\n\n\n//  Blue\n//  ───────────────────────────────────\n\n$oc-blue-list: (\n  \"0\": #e7f5ff,\n  \"1\": #d0ebff,\n  \"2\": #a5d8ff,\n  \"3\": #74c0fc,\n  \"4\": #4dabf7,\n  \"5\": #339af0,\n  \"6\": #228be6,\n  \"7\": #1c7ed6,\n  \"8\": #1971c2,\n  \"9\": #1864ab\n);\n\n$oc-blue-0: map-get($oc-blue-list, \"0\");\n$oc-blue-1: map-get($oc-blue-list, \"1\");\n$oc-blue-2: map-get($oc-blue-list, \"2\");\n$oc-blue-3: map-get($oc-blue-list, \"3\");\n$oc-blue-4: map-get($oc-blue-list, \"4\");\n$oc-blue-5: map-get($oc-blue-list, \"5\");\n$oc-blue-6: map-get($oc-blue-list, \"6\");\n$oc-blue-7: map-get($oc-blue-list, \"7\");\n$oc-blue-8: map-get($oc-blue-list, \"8\");\n$oc-blue-9: map-get($oc-blue-list, \"9\");\n\n\n//  Cyan\n//  ───────────────────────────────────\n\n$oc-cyan-list: (\n  \"0\": #e3fafc,\n  \"1\": #c5f6fa,\n  \"2\": #99e9f2,\n  \"3\": #66d9e8,\n  \"4\": #3bc9db,\n  \"5\": #22b8cf,\n  \"6\": #15aabf,\n  \"7\": #1098ad,\n  \"8\": #0c8599,\n  \"9\": #0b7285\n);\n\n$oc-cyan-0: map-get($oc-cyan-list, \"0\");\n$oc-cyan-1: map-get($oc-cyan-list, \"1\");\n$oc-cyan-2: map-get($oc-cyan-list, \"2\");\n$oc-cyan-3: map-get($oc-cyan-list, \"3\");\n$oc-cyan-4: map-get($oc-cyan-list, \"4\");\n$oc-cyan-5: map-get($oc-cyan-list, \"5\");\n$oc-cyan-6: map-get($oc-cyan-list, \"6\");\n$oc-cyan-7: map-get($oc-cyan-list, \"7\");\n$oc-cyan-8: map-get($oc-cyan-list, \"8\");\n$oc-cyan-9: map-get($oc-cyan-list, \"9\");\n\n\n//  Teal\n//  ───────────────────────────────────\n\n$oc-teal-list: (\n  \"0\": #e6fcf5,\n  \"1\": #c3fae8,\n  \"2\": #96f2d7,\n  \"3\": #63e6be,\n  \"4\": #38d9a9,\n  \"5\": #20c997,\n  \"6\": #12b886,\n  \"7\": #0ca678,\n  \"8\": #099268,\n  \"9\": #087f5b\n);\n\n$oc-teal-0: map-get($oc-teal-list, \"0\");\n$oc-teal-1: map-get($oc-teal-list, \"1\");\n$oc-teal-2: map-get($oc-teal-list, \"2\");\n$oc-teal-3: map-get($oc-teal-list, \"3\");\n$oc-teal-4: map-get($oc-teal-list, \"4\");\n$oc-teal-5: map-get($oc-teal-list, \"5\");\n$oc-teal-6: map-get($oc-teal-list, \"6\");\n$oc-teal-7: map-get($oc-teal-list, \"7\");\n$oc-teal-8: map-get($oc-teal-list, \"8\");\n$oc-teal-9: map-get($oc-teal-list, \"9\");\n\n\n//  Green\n//  ───────────────────────────────────\n\n$oc-green-list: (\n  \"0\": #ebfbee,\n  \"1\": #d3f9d8,\n  \"2\": #b2f2bb,\n  \"3\": #8ce99a,\n  \"4\": #69db7c,\n  \"5\": #51cf66,\n  \"6\": #40c057,\n  \"7\": #37b24d,\n  \"8\": #2f9e44,\n  \"9\": #2b8a3e\n);\n\n$oc-green-0: map-get($oc-green-list, \"0\");\n$oc-green-1: map-get($oc-green-list, \"1\");\n$oc-green-2: map-get($oc-green-list, \"2\");\n$oc-green-3: map-get($oc-green-list, \"3\");\n$oc-green-4: map-get($oc-green-list, \"4\");\n$oc-green-5: map-get($oc-green-list, \"5\");\n$oc-green-6: map-get($oc-green-list, \"6\");\n$oc-green-7: map-get($oc-green-list, \"7\");\n$oc-green-8: map-get($oc-green-list, \"8\");\n$oc-green-9: map-get($oc-green-list, \"9\");\n\n\n//  Lime\n//  ───────────────────────────────────\n\n$oc-lime-list: (\n  \"0\": #f4fce3,\n  \"1\": #e9fac8,\n  \"2\": #d8f5a2,\n  \"3\": #c0eb75,\n  \"4\": #a9e34b,\n  \"5\": #94d82d,\n  \"6\": #82c91e,\n  \"7\": #74b816,\n  \"8\": #66a80f,\n  \"9\": #5c940d\n);\n\n$oc-lime-0: map-get($oc-lime-list, \"0\");\n$oc-lime-1: map-get($oc-lime-list, \"1\");\n$oc-lime-2: map-get($oc-lime-list, \"2\");\n$oc-lime-3: map-get($oc-lime-list, \"3\");\n$oc-lime-4: map-get($oc-lime-list, \"4\");\n$oc-lime-5: map-get($oc-lime-list, \"5\");\n$oc-lime-6: map-get($oc-lime-list, \"6\");\n$oc-lime-7: map-get($oc-lime-list, \"7\");\n$oc-lime-8: map-get($oc-lime-list, \"8\");\n$oc-lime-9: map-get($oc-lime-list, \"9\");\n\n\n//  Yellow\n//  ───────────────────────────────────\n\n$oc-yellow-list: (\n  \"0\": #fff9db,\n  \"1\": #fff3bf,\n  \"2\": #ffec99,\n  \"3\": #ffe066,\n  \"4\": #ffd43b,\n  \"5\": #fcc419,\n  \"6\": #fab005,\n  \"7\": #f59f00,\n  \"8\": #f08c00,\n  \"9\": #e67700\n);\n\n$oc-yellow-0: map-get($oc-yellow-list, \"0\");\n$oc-yellow-1: map-get($oc-yellow-list, \"1\");\n$oc-yellow-2: map-get($oc-yellow-list, \"2\");\n$oc-yellow-3: map-get($oc-yellow-list, \"3\");\n$oc-yellow-4: map-get($oc-yellow-list, \"4\");\n$oc-yellow-5: map-get($oc-yellow-list, \"5\");\n$oc-yellow-6: map-get($oc-yellow-list, \"6\");\n$oc-yellow-7: map-get($oc-yellow-list, \"7\");\n$oc-yellow-8: map-get($oc-yellow-list, \"8\");\n$oc-yellow-9: map-get($oc-yellow-list, \"9\");\n\n\n//  Orange\n//  ───────────────────────────────────\n\n$oc-orange-list: (\n  \"0\": #fff4e6,\n  \"1\": #ffe8cc,\n  \"2\": #ffd8a8,\n  \"3\": #ffc078,\n  \"4\": #ffa94d,\n  \"5\": #ff922b,\n  \"6\": #fd7e14,\n  \"7\": #f76707,\n  \"8\": #e8590c,\n  \"9\": #d9480f\n);\n\n$oc-orange-0: map-get($oc-orange-list, \"0\");\n$oc-orange-1: map-get($oc-orange-list, \"1\");\n$oc-orange-2: map-get($oc-orange-list, \"2\");\n$oc-orange-3: map-get($oc-orange-list, \"3\");\n$oc-orange-4: map-get($oc-orange-list, \"4\");\n$oc-orange-5: map-get($oc-orange-list, \"5\");\n$oc-orange-6: map-get($oc-orange-list, \"6\");\n$oc-orange-7: map-get($oc-orange-list, \"7\");\n$oc-orange-8: map-get($oc-orange-list, \"8\");\n$oc-orange-9: map-get($oc-orange-list, \"9\");\n\n\n//  Color list\n//  ───────────────────────────────────\n\n$oc-color-spectrum:   9;\n\n$oc-color-list: (\n  $oc-gray-list:      \"gray\",\n  $oc-red-list:      \"red\",\n  $oc-pink-list:      \"pink\",\n  $oc-grape-list:      \"grape\",\n  $oc-violet-list:      \"violet\",\n  $oc-indigo-list:      \"indigo\",\n  $oc-blue-list:      \"blue\",\n  $oc-cyan-list:      \"cyan\",\n  $oc-teal-list:      \"teal\",\n  $oc-green-list:      \"green\",\n  $oc-lime-list:      \"lime\",\n  $oc-yellow-list:      \"yellow\",\n  $oc-orange-list:      \"orange\"\n);\n","@import '../../../../src/styles/utils.scss';\r\n\r\n.w3-modal-content {\r\n  z-index: 90;\r\n  background: none;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  .content {\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    top: 50vh;\r\n    left: 50vw;\r\n    transform: translate(-50%,-50%);\r\n    width: 400px;\r\n    height: 600px;\r\n    border-radius: 30px;\r\n    box-shadow: 0 5px 5px 0 rgba(0,0,0,.2);\r\n    background-color: #f5f5f5;\r\n    @include media(\"<wide\") {\r\n      height: 30rem;\r\n\r\n    }\r\n    @include media(\"<medium\") {\r\n      padding-left: 1rem;\r\n      padding-right: 1rem;\r\n    }\r\n\r\n    i {\r\n      cursor: pointer;\r\n      font-size: 1.5rem;\r\n      margin-top: 18px;\r\n      margin-left: 19px;\r\n    }\r\n    \r\n    .Modal_Input {\r\n      padding-left: 1rem;\r\n      font-size: 1.2rem;\r\n      width: calc(90% - 6px - 1.625rem);\r\n      height: calc(3.125rem - 6px);\r\n      border: 3px solid #e0e0e0;\r\n      border-radius: 5px;\r\n      margin-left: 2rem;\r\n    }\r\n\r\n    .Modal_Input + .Modal_Input {\r\n      margin-top: 1.5rem;\r\n    }\r\n\r\n    .Modal_Button {\r\n      transition: all 0.3s ease-in;\r\n      width: calc(90% - 6px - 1.625rem);\r\n      height: calc(3.125rem - 6px);\r\n      margin-top: 1.5rem;\r\n      margin-left: 2rem;\r\n      border: none;\r\n      border-radius: 5px;\r\n      background: $oc-yellow-6;\r\n      cursor: pointer;\r\n      color: black;\r\n      font-size: 1.125rem;\r\n      &:hover {\r\n        background-color: $oc-yellow-3;\r\n      }\r\n    }\r\n  }\r\n  .modal_Login {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 3.125rem;\r\n    background-color: #e0e0e0;\r\n    border-bottom-left-radius: 20px;\r\n    border-bottom-right-radius: 20px;\r\n    color: $oc-blue-5;\r\n    font-size: .875rem;\r\n    font-family: NanumSquareR;\r\n    .Login_text {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","//\n//\n//  𝗖 𝗢 𝗟 𝗢 𝗥\n//  v 1.6.3\n//\n//  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n\n//  General\n//  ───────────────────────────────────\n\n$oc-white:         #ffffff;\n$oc-black:         #000000;\n\n\n//  Gray\n//  ───────────────────────────────────\n\n$oc-gray-list: (\n  \"0\": #f8f9fa,\n  \"1\": #f1f3f5,\n  \"2\": #e9ecef,\n  \"3\": #dee2e6,\n  \"4\": #ced4da,\n  \"5\": #adb5bd,\n  \"6\": #868e96,\n  \"7\": #495057,\n  \"8\": #343a40,\n  \"9\": #212529\n);\n\n$oc-gray-0: map-get($oc-gray-list, \"0\");\n$oc-gray-1: map-get($oc-gray-list, \"1\");\n$oc-gray-2: map-get($oc-gray-list, \"2\");\n$oc-gray-3: map-get($oc-gray-list, \"3\");\n$oc-gray-4: map-get($oc-gray-list, \"4\");\n$oc-gray-5: map-get($oc-gray-list, \"5\");\n$oc-gray-6: map-get($oc-gray-list, \"6\");\n$oc-gray-7: map-get($oc-gray-list, \"7\");\n$oc-gray-8: map-get($oc-gray-list, \"8\");\n$oc-gray-9: map-get($oc-gray-list, \"9\");\n\n\n//  Red\n//  ───────────────────────────────────\n\n$oc-red-list: (\n  \"0\": #fff5f5,\n  \"1\": #ffe3e3,\n  \"2\": #ffc9c9,\n  \"3\": #ffa8a8,\n  \"4\": #ff8787,\n  \"5\": #ff6b6b,\n  \"6\": #fa5252,\n  \"7\": #f03e3e,\n  \"8\": #e03131,\n  \"9\": #c92a2a\n);\n\n$oc-red-0: map-get($oc-red-list, \"0\");\n$oc-red-1: map-get($oc-red-list, \"1\");\n$oc-red-2: map-get($oc-red-list, \"2\");\n$oc-red-3: map-get($oc-red-list, \"3\");\n$oc-red-4: map-get($oc-red-list, \"4\");\n$oc-red-5: map-get($oc-red-list, \"5\");\n$oc-red-6: map-get($oc-red-list, \"6\");\n$oc-red-7: map-get($oc-red-list, \"7\");\n$oc-red-8: map-get($oc-red-list, \"8\");\n$oc-red-9: map-get($oc-red-list, \"9\");\n\n\n//  Pink\n//  ───────────────────────────────────\n\n$oc-pink-list: (\n  \"0\": #fff0f6,\n  \"1\": #ffdeeb,\n  \"2\": #fcc2d7,\n  \"3\": #faa2c1,\n  \"4\": #f783ac,\n  \"5\": #f06595,\n  \"6\": #e64980,\n  \"7\": #d6336c,\n  \"8\": #c2255c,\n  \"9\": #a61e4d\n);\n\n$oc-pink-0: map-get($oc-pink-list, \"0\");\n$oc-pink-1: map-get($oc-pink-list, \"1\");\n$oc-pink-2: map-get($oc-pink-list, \"2\");\n$oc-pink-3: map-get($oc-pink-list, \"3\");\n$oc-pink-4: map-get($oc-pink-list, \"4\");\n$oc-pink-5: map-get($oc-pink-list, \"5\");\n$oc-pink-6: map-get($oc-pink-list, \"6\");\n$oc-pink-7: map-get($oc-pink-list, \"7\");\n$oc-pink-8: map-get($oc-pink-list, \"8\");\n$oc-pink-9: map-get($oc-pink-list, \"9\");\n\n\n//  Grape\n//  ───────────────────────────────────\n\n$oc-grape-list: (\n  \"0\": #f8f0fc,\n  \"1\": #f3d9fa,\n  \"2\": #eebefa,\n  \"3\": #e599f7,\n  \"4\": #da77f2,\n  \"5\": #cc5de8,\n  \"6\": #be4bdb,\n  \"7\": #ae3ec9,\n  \"8\": #9c36b5,\n  \"9\": #862e9c\n);\n\n$oc-grape-0: map-get($oc-grape-list, \"0\");\n$oc-grape-1: map-get($oc-grape-list, \"1\");\n$oc-grape-2: map-get($oc-grape-list, \"2\");\n$oc-grape-3: map-get($oc-grape-list, \"3\");\n$oc-grape-4: map-get($oc-grape-list, \"4\");\n$oc-grape-5: map-get($oc-grape-list, \"5\");\n$oc-grape-6: map-get($oc-grape-list, \"6\");\n$oc-grape-7: map-get($oc-grape-list, \"7\");\n$oc-grape-8: map-get($oc-grape-list, \"8\");\n$oc-grape-9: map-get($oc-grape-list, \"9\");\n\n\n//  Violet\n//  ───────────────────────────────────\n\n$oc-violet-list: (\n  \"0\": #f3f0ff,\n  \"1\": #e5dbff,\n  \"2\": #d0bfff,\n  \"3\": #b197fc,\n  \"4\": #9775fa,\n  \"5\": #845ef7,\n  \"6\": #7950f2,\n  \"7\": #7048e8,\n  \"8\": #6741d9,\n  \"9\": #5f3dc4\n);\n\n$oc-violet-0: map-get($oc-violet-list, \"0\");\n$oc-violet-1: map-get($oc-violet-list, \"1\");\n$oc-violet-2: map-get($oc-violet-list, \"2\");\n$oc-violet-3: map-get($oc-violet-list, \"3\");\n$oc-violet-4: map-get($oc-violet-list, \"4\");\n$oc-violet-5: map-get($oc-violet-list, \"5\");\n$oc-violet-6: map-get($oc-violet-list, \"6\");\n$oc-violet-7: map-get($oc-violet-list, \"7\");\n$oc-violet-8: map-get($oc-violet-list, \"8\");\n$oc-violet-9: map-get($oc-violet-list, \"9\");\n\n\n//  Indigo\n//  ───────────────────────────────────\n\n$oc-indigo-list: (\n  \"0\": #edf2ff,\n  \"1\": #dbe4ff,\n  \"2\": #bac8ff,\n  \"3\": #91a7ff,\n  \"4\": #748ffc,\n  \"5\": #5c7cfa,\n  \"6\": #4c6ef5,\n  \"7\": #4263eb,\n  \"8\": #3b5bdb,\n  \"9\": #364fc7\n);\n\n$oc-indigo-0: map-get($oc-indigo-list, \"0\");\n$oc-indigo-1: map-get($oc-indigo-list, \"1\");\n$oc-indigo-2: map-get($oc-indigo-list, \"2\");\n$oc-indigo-3: map-get($oc-indigo-list, \"3\");\n$oc-indigo-4: map-get($oc-indigo-list, \"4\");\n$oc-indigo-5: map-get($oc-indigo-list, \"5\");\n$oc-indigo-6: map-get($oc-indigo-list, \"6\");\n$oc-indigo-7: map-get($oc-indigo-list, \"7\");\n$oc-indigo-8: map-get($oc-indigo-list, \"8\");\n$oc-indigo-9: map-get($oc-indigo-list, \"9\");\n\n\n//  Blue\n//  ───────────────────────────────────\n\n$oc-blue-list: (\n  \"0\": #e7f5ff,\n  \"1\": #d0ebff,\n  \"2\": #a5d8ff,\n  \"3\": #74c0fc,\n  \"4\": #4dabf7,\n  \"5\": #339af0,\n  \"6\": #228be6,\n  \"7\": #1c7ed6,\n  \"8\": #1971c2,\n  \"9\": #1864ab\n);\n\n$oc-blue-0: map-get($oc-blue-list, \"0\");\n$oc-blue-1: map-get($oc-blue-list, \"1\");\n$oc-blue-2: map-get($oc-blue-list, \"2\");\n$oc-blue-3: map-get($oc-blue-list, \"3\");\n$oc-blue-4: map-get($oc-blue-list, \"4\");\n$oc-blue-5: map-get($oc-blue-list, \"5\");\n$oc-blue-6: map-get($oc-blue-list, \"6\");\n$oc-blue-7: map-get($oc-blue-list, \"7\");\n$oc-blue-8: map-get($oc-blue-list, \"8\");\n$oc-blue-9: map-get($oc-blue-list, \"9\");\n\n\n//  Cyan\n//  ───────────────────────────────────\n\n$oc-cyan-list: (\n  \"0\": #e3fafc,\n  \"1\": #c5f6fa,\n  \"2\": #99e9f2,\n  \"3\": #66d9e8,\n  \"4\": #3bc9db,\n  \"5\": #22b8cf,\n  \"6\": #15aabf,\n  \"7\": #1098ad,\n  \"8\": #0c8599,\n  \"9\": #0b7285\n);\n\n$oc-cyan-0: map-get($oc-cyan-list, \"0\");\n$oc-cyan-1: map-get($oc-cyan-list, \"1\");\n$oc-cyan-2: map-get($oc-cyan-list, \"2\");\n$oc-cyan-3: map-get($oc-cyan-list, \"3\");\n$oc-cyan-4: map-get($oc-cyan-list, \"4\");\n$oc-cyan-5: map-get($oc-cyan-list, \"5\");\n$oc-cyan-6: map-get($oc-cyan-list, \"6\");\n$oc-cyan-7: map-get($oc-cyan-list, \"7\");\n$oc-cyan-8: map-get($oc-cyan-list, \"8\");\n$oc-cyan-9: map-get($oc-cyan-list, \"9\");\n\n\n//  Teal\n//  ───────────────────────────────────\n\n$oc-teal-list: (\n  \"0\": #e6fcf5,\n  \"1\": #c3fae8,\n  \"2\": #96f2d7,\n  \"3\": #63e6be,\n  \"4\": #38d9a9,\n  \"5\": #20c997,\n  \"6\": #12b886,\n  \"7\": #0ca678,\n  \"8\": #099268,\n  \"9\": #087f5b\n);\n\n$oc-teal-0: map-get($oc-teal-list, \"0\");\n$oc-teal-1: map-get($oc-teal-list, \"1\");\n$oc-teal-2: map-get($oc-teal-list, \"2\");\n$oc-teal-3: map-get($oc-teal-list, \"3\");\n$oc-teal-4: map-get($oc-teal-list, \"4\");\n$oc-teal-5: map-get($oc-teal-list, \"5\");\n$oc-teal-6: map-get($oc-teal-list, \"6\");\n$oc-teal-7: map-get($oc-teal-list, \"7\");\n$oc-teal-8: map-get($oc-teal-list, \"8\");\n$oc-teal-9: map-get($oc-teal-list, \"9\");\n\n\n//  Green\n//  ───────────────────────────────────\n\n$oc-green-list: (\n  \"0\": #ebfbee,\n  \"1\": #d3f9d8,\n  \"2\": #b2f2bb,\n  \"3\": #8ce99a,\n  \"4\": #69db7c,\n  \"5\": #51cf66,\n  \"6\": #40c057,\n  \"7\": #37b24d,\n  \"8\": #2f9e44,\n  \"9\": #2b8a3e\n);\n\n$oc-green-0: map-get($oc-green-list, \"0\");\n$oc-green-1: map-get($oc-green-list, \"1\");\n$oc-green-2: map-get($oc-green-list, \"2\");\n$oc-green-3: map-get($oc-green-list, \"3\");\n$oc-green-4: map-get($oc-green-list, \"4\");\n$oc-green-5: map-get($oc-green-list, \"5\");\n$oc-green-6: map-get($oc-green-list, \"6\");\n$oc-green-7: map-get($oc-green-list, \"7\");\n$oc-green-8: map-get($oc-green-list, \"8\");\n$oc-green-9: map-get($oc-green-list, \"9\");\n\n\n//  Lime\n//  ───────────────────────────────────\n\n$oc-lime-list: (\n  \"0\": #f4fce3,\n  \"1\": #e9fac8,\n  \"2\": #d8f5a2,\n  \"3\": #c0eb75,\n  \"4\": #a9e34b,\n  \"5\": #94d82d,\n  \"6\": #82c91e,\n  \"7\": #74b816,\n  \"8\": #66a80f,\n  \"9\": #5c940d\n);\n\n$oc-lime-0: map-get($oc-lime-list, \"0\");\n$oc-lime-1: map-get($oc-lime-list, \"1\");\n$oc-lime-2: map-get($oc-lime-list, \"2\");\n$oc-lime-3: map-get($oc-lime-list, \"3\");\n$oc-lime-4: map-get($oc-lime-list, \"4\");\n$oc-lime-5: map-get($oc-lime-list, \"5\");\n$oc-lime-6: map-get($oc-lime-list, \"6\");\n$oc-lime-7: map-get($oc-lime-list, \"7\");\n$oc-lime-8: map-get($oc-lime-list, \"8\");\n$oc-lime-9: map-get($oc-lime-list, \"9\");\n\n\n//  Yellow\n//  ───────────────────────────────────\n\n$oc-yellow-list: (\n  \"0\": #fff9db,\n  \"1\": #fff3bf,\n  \"2\": #ffec99,\n  \"3\": #ffe066,\n  \"4\": #ffd43b,\n  \"5\": #fcc419,\n  \"6\": #fab005,\n  \"7\": #f59f00,\n  \"8\": #f08c00,\n  \"9\": #e67700\n);\n\n$oc-yellow-0: map-get($oc-yellow-list, \"0\");\n$oc-yellow-1: map-get($oc-yellow-list, \"1\");\n$oc-yellow-2: map-get($oc-yellow-list, \"2\");\n$oc-yellow-3: map-get($oc-yellow-list, \"3\");\n$oc-yellow-4: map-get($oc-yellow-list, \"4\");\n$oc-yellow-5: map-get($oc-yellow-list, \"5\");\n$oc-yellow-6: map-get($oc-yellow-list, \"6\");\n$oc-yellow-7: map-get($oc-yellow-list, \"7\");\n$oc-yellow-8: map-get($oc-yellow-list, \"8\");\n$oc-yellow-9: map-get($oc-yellow-list, \"9\");\n\n\n//  Orange\n//  ───────────────────────────────────\n\n$oc-orange-list: (\n  \"0\": #fff4e6,\n  \"1\": #ffe8cc,\n  \"2\": #ffd8a8,\n  \"3\": #ffc078,\n  \"4\": #ffa94d,\n  \"5\": #ff922b,\n  \"6\": #fd7e14,\n  \"7\": #f76707,\n  \"8\": #e8590c,\n  \"9\": #d9480f\n);\n\n$oc-orange-0: map-get($oc-orange-list, \"0\");\n$oc-orange-1: map-get($oc-orange-list, \"1\");\n$oc-orange-2: map-get($oc-orange-list, \"2\");\n$oc-orange-3: map-get($oc-orange-list, \"3\");\n$oc-orange-4: map-get($oc-orange-list, \"4\");\n$oc-orange-5: map-get($oc-orange-list, \"5\");\n$oc-orange-6: map-get($oc-orange-list, \"6\");\n$oc-orange-7: map-get($oc-orange-list, \"7\");\n$oc-orange-8: map-get($oc-orange-list, \"8\");\n$oc-orange-9: map-get($oc-orange-list, \"9\");\n\n\n//  Color list\n//  ───────────────────────────────────\n\n$oc-color-spectrum:   9;\n\n$oc-color-list: (\n  $oc-gray-list:      \"gray\",\n  $oc-red-list:      \"red\",\n  $oc-pink-list:      \"pink\",\n  $oc-grape-list:      \"grape\",\n  $oc-violet-list:      \"violet\",\n  $oc-indigo-list:      \"indigo\",\n  $oc-blue-list:      \"blue\",\n  $oc-cyan-list:      \"cyan\",\n  $oc-teal-list:      \"teal\",\n  $oc-green-list:      \"green\",\n  $oc-lime-list:      \"lime\",\n  $oc-yellow-list:      \"yellow\",\n  $oc-orange-list:      \"orange\"\n);\n","@import '../../styles/utils.scss';\r\n\r\n.interface {\r\n    color: #a07b12;\r\n    width: 150%;\r\n    margin-left: 2rem;\r\n    .front-interface {\r\n        \r\n        cursor: pointer;\r\n    }\r\n}","@import '../../styles/utils.scss';\r\n\r\n.Profile-Modal {\r\n    z-index: 90;\r\n    background: none;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .Profile-content {\r\n        position: absolute;\r\n        display: flex;\r\n        flex-direction: column;\r\n        top: 50vh;\r\n        left: 50vw;\r\n        transform: translate(-50%,-50%);\r\n        width: 400px;\r\n        height: 570px;\r\n        border-radius: 30px;\r\n        box-shadow: 0 5px 5px 0 rgba(0,0,0,.2);\r\n        background-color: #292C37;\r\n    }\r\n    i {\r\n        cursor: pointer;\r\n        font-size: 1.5rem;\r\n        margin-top: 18px;\r\n        margin-left: 19px;\r\n        color: black;\r\n      }\r\n    .info {\r\n        display: flex;\r\n        flex: 1;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        color: white;\r\n        .item + .item {\r\n            margin-top: 2rem;\r\n        }\r\n        .profile {\r\n            display: flex;\r\n            flex: 0.6;\r\n            justify-content: center;\r\n            align-items: center;\r\n            margin-bottom: 6rem;\r\n        }\r\n        .image {\r\n            width: 50%;\r\n        }\r\n    }\r\n}","@import '../../../../src/styles/utils.scss';\r\n\r\n.Banner {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    margin: 0 auto;\r\n    img {\r\n        transition: all 0.3s ease-in;\r\n        height: calc(100vh - 7rem);\r\n        width: 100vw;\r\n        object-fit: cover;\r\n        object-position: 0px 50%;\r\n        vertical-align: middle;\r\n        &:hover {\r\n            -webkit-filter: brightness(50%);\r\n            -moz-filter: brightness(50%);  \r\n        }\r\n    }\r\n    .Banner_Text {\r\n        padding: 5px 10px;\r\n        font-size: 4rem;\r\n        font-weight: 500;\r\n        color: #000000;\r\n        text-align: center;\r\n        position: absolute;\r\n\t    top: 50%;\r\n        left: 50%;\r\n        transform: translate( -50%, -50% );\r\n    }\r\n}\r\n\r\n.Banner + .Banner {\r\n    margin-top: 8rem;\r\n}","@import '../../../../src/styles/utils.scss';\r\n\r\n.footer-wrapper {  \r\n    margin-top: 10rem;\r\n    background-color: #212529;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    color: black;\r\n    height: 220px;\r\n    .footer-content-wrapper {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        width: 900px;\r\n        height: 300px;\r\n        .content {\r\n            &.frontend {\r\n                .team {\r\n                    color: white;\r\n                    padding-bottom: 0.4rem;\r\n                    padding-right: 2rem;\r\n                    font-size: 19px;\r\n                    font-family: NanumSquareEB;\r\n                    border-bottom: 1px solid white;\r\n                }\r\n                .member {\r\n                    margin-top: 1.2rem;\r\n                    color: white;\r\n                    font-size: 15px;\r\n                }\r\n            }\r\n        }\r\n        .content + .content {\r\n            margin-left: 7rem;\r\n        }\r\n    }\r\n    .footer-bottom-wrapper {\r\n        margin-top: 2rem;\r\n        width: 900px;\r\n        height: 125px;\r\n        .copyright {\r\n            img {\r\n                width: 30px;\r\n            }\r\n            span {\r\n                margin-left: 0.5rem;\r\n                color: white;\r\n            }\r\n        }\r\n    }\r\n}","@import '../../../../src/styles/utils.scss';\r\n\r\n.ranking-tr {\r\n    color: black;\r\n    background-color: #ffffff;\r\n    &:nth-child(odd) {\r\n        background-color: #F2F2F2;\r\n    }\r\n}\r\n.ranking-table__cell {\r\n    height: 54px;\r\n    line-height: 16px;\r\n    font-size: 14px;\r\n}\r\n\r\n.ranking-rank {\r\n    text-align: center;\r\n    color: black;\r\n}\r\n\r\n.rank-name {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}","@import '../../../../src/styles/utils.scss';\r\n\r\nul {\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nli {\r\n    list-style: none;\r\n    margin: 0;\r\n}\r\n\r\n.crown {\r\n    margin-top: 1.3rem;\r\n    width: 9%;\r\n}\r\n.rank_wrapper_big {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n}\r\n.rank_wrapper_small {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n}\r\n.TopRank {\r\n    .high-rank {\r\n        padding: 14px 18px;\r\n        border: 2px solid goldenrod;\r\n        background: #212529;\r\n        margin-top: 30px;\r\n        .Top_Rank {\r\n            width: 30px;\r\n            background: #bdbbbb;\r\n            padding: 3px 0;\r\n            line-height: 24px;\r\n            font-family: Helvetica,AppleSDGothic,\"Apple SD Gothic Neo\",AppleGothic,Arial,Tahoma;\r\n            font-size: 21px;\r\n            text-align: center;\r\n            color: black;\r\n            margin-bottom: 1rem;\r\n        }\r\n        .Top_Point {\r\n            color: white;\r\n        }\r\n        .Top_Name {\r\n            line-height: 24px;\r\n            font-weight: 700;\r\n            font-size: 18px;\r\n            color: white;\r\n            word-break:break-all;\r\n        }\r\n        img {\r\n            margin-top: 1rem;\r\n            width: 120px;\r\n            height: 120px;\r\n        }\r\n    }\r\n    .First {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        width: 370px;\r\n        margin: 0 auto;\r\n        margin-top: 3rem;\r\n        border-width: 5px;\r\n    }\r\n\r\n    .small {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        width: 220px;\r\n        border-width: 5px;  \r\n    }\r\n    .small +  .small {\r\n        margin-left: 2rem;\r\n    }\r\n}\r\n","table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\n.ranking-tr {\r\n    \r\n}\r\n.ranking-table {\r\n    z-index:80;\r\n    position: relative;\r\n    width: 100%;\r\n    table-layout: fixed;\r\n    background-color: #ededed;\r\n    margin: 2rem 0 2rem 0;\r\n    width: 80%;\r\n    left: 200px;\r\n}\r\n\r\n.ranking-table__header {\r\n    padding: 1rem 0 1rem 0;\r\n}\r\n\r\n.ranking-table {\r\n    height: 41px;\r\n    padding: 0;\r\n    line-height: 17px;\r\n    font-size: 14px;\r\n    text-align: left;\r\n    color: #444b4b;\r\n    font-weight: normal;\r\n}\r\n",".Lotto-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    height: calc(100vw - 70.5rem);\r\n    .description {\r\n        display: flex;\r\n        margin-top: 2rem;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        color: white;\r\n    }\r\n    .text + .text {\r\n        margin-top: 1rem;\r\n    }\r\n    .notice {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-top: 2rem;    \r\n        border: 1px solid red;\r\n        width: 100vw;\r\n        height: 200px;\r\n        color: white;\r\n        float: bottom;\r\n        .text-wrapper {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            flex-direction: column;\r\n            width: 20vw;\r\n            height: 200px;\r\n            font-size: 1.3rem;\r\n            font-weight: 600;\r\n            .text {\r\n                margin: 0;\r\n            }\r\n        }\r\n        img {\r\n            width: 30px;\r\n        }\r\n        .text + .text {\r\n            margin-top: 1rem;\r\n        }\r\n    }\r\n}\r\n","@import '../../styles/utils.scss';\r\n\r\n.LottoMain-wrapper {\r\n    .title {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 4rem;\r\n        height: 200px;\r\n        color: #37b24d;\r\n    }\r\n    .LottoBall-wrapper {\r\n        height: 7vh;\r\n        color: white;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        #title-number {\r\n            margin-left: 2rem;\r\n        }\r\n        .LottoBall {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            overflow: hidden;\r\n            float: left;\r\n            width: 44px;\r\n            height: 44px;\r\n            border-radius: 100%;\r\n            &.yellow {\r\n                background-color: #FCC43D;\r\n            }\r\n            &.blue {\r\n                background-color: #8CC6E7;\r\n            }\r\n            &.red {\r\n                background-color: #F18D80;\r\n            }\r\n            &.purple {\r\n                background-color: #A7A2DE;\r\n            }\r\n            &.green {\r\n                background-color: #6BCE9E;\r\n            }\r\n        }\r\n        .LottoBall + .LottoBall {\r\n            margin-left: 2rem;\r\n        }\r\n    }\r\n    .buy-window {\r\n        display: flex;\r\n        justify-content: center;\r\n        color: white;\r\n        margin-top: 4rem;\r\n        .input-number {\r\n            width: 2rem;\r\n            height: 2rem;\r\n            text-align: center;\r\n        }\r\n        .bonus-text {\r\n            margin-left: 1rem;\r\n            margin-right: 1rem;\r\n        }\r\n        .buy-button {\r\n            margin-left: 1rem;\r\n            background: linear-gradient(rgba(255,105,30,1) 0%, rgba(230,95,28,1) 100%);\r\n            padding: 4px 12px;\r\n            font-size: 12px;\r\n            text-decoration: none;\r\n            cursor: pointer;\r\n            border: none;\r\n            outline: 0;\r\n            color: white;\r\n            position: relative;\r\n            border: 1px solid;\r\n            border-radius: 4px;\r\n            text-shadow: 0 1px 0 rgba(0,0,0,0.15);\r\n            &:hover {\r\n                \r\n            }\r\n        }\r\n        .input-number + .input-number {\r\n            margin-left: 1rem;\r\n        }\r\n    }   \r\n}\r\n","@import '../../styles/utils.scss';\r\n\r\n.Minesweeper-wrapper {\r\n    .Minesweeper {\r\n        margin-top: 2rem;\r\n        padding: 20px;\r\n        border: 1px solid white;\r\n        width: 100vw;\r\n        height: 50vh;\r\n        .Container {\r\n            max-width: 54em;\r\n            margin: 0 auto;\r\n            text-align: left;\r\n            min-height: 26em;\r\n            .user-interface {\r\n                display: flex;\r\n                justify-content: flex-end;\r\n                color: white;\r\n                text-align: left;\r\n                height: 112px;\r\n                width: 739px;    \r\n                .top-row {\r\n                    display: flex;\r\n                    .batting {\r\n                        input {\r\n                            font-size: 28px;\r\n                            text-align: center;\r\n                            background-color: black;\r\n                            height: 53px;\r\n                            width: 174px;\r\n                            border-top: 1px solid #000000;\r\n                            border-right: 1px solid #333333;\r\n                            border-bottom: 1px solid #555555;\r\n                            border-left: 1px solid #333333;\r\n                            color: #cccccc;\r\n                        }\r\n                    }\r\n                    .game_button {\r\n                        button {\r\n                            background-color: #37b24d;\r\n                            color: white;\r\n                            border: 1px solid #52B000;\r\n                            padding: 10px 12px 10px 12px;\r\n                            height: 53px;\r\n                            width: 109px;\r\n                        } \r\n                    }\r\n                }\r\n                .bottom-row {\r\n                    display: flex;\r\n                    height: 3rem;\r\n                    .cell {\r\n                        display: flex;\r\n                        background: #333;\r\n                        border: 1px solid #111;\r\n                        border-top-color: #000;\r\n                        height: 39px;\r\n                        width: 71px;\r\n                        button {\r\n                            color: white;\r\n                            border-top: 1px solid #777777;\r\n                            border-right: 1px solid #111111;\r\n                            border-bottom: 2px solid #1A1A1A;\r\n                            border-left: 1px solid #666666;\r\n                            background-color: #444444;\r\n                            cursor: pointer;\r\n                            flex:1;\r\n                            img{\r\n                                margin-right: 0.2rem;\r\n                                width: 20px;\r\n                            }\r\n                            span {\r\n                                pointer-events: none;\r\n                                cursor: default;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            .table-mine {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                table {\r\n                    display: table;\r\n                    border-collapse: separate;\r\n                    border-spacing: 2px;\r\n                    border-color: grey;\r\n                    table-layout: fixed;\r\n                    text-align: center;\r\n                    max-height: 400px;\r\n                    max-width: 400px;\r\n                    color: black;\r\n                    width: 300px;\r\n                    height: 300px;\r\n                    tr {\r\n                        display: table-row;\r\n                        vertical-align: middle;\r\n                        border-color: inherit;\r\n                    }\r\n                    td {\r\n                        height: 57.6px;\r\n                        word-break: break-all;\r\n                        background-color: gray;\r\n                        border-radius: 5px;\r\n                    }\r\n                }\r\n                .Game_status {\r\n                    margin-left: 2rem;\r\n                    width: 300px;\r\n                    height: 300px;\r\n                    color: white;\r\n                    .batting-status {\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: space-between;\r\n                        flex-direction: row;\r\n                        height: 75px;\r\n                        width: 411px;\r\n                        border-top: 1px solid #222222;\r\n                        border-right: 1px solid #333333;\r\n                        border-bottom: 1px solid #444444;\r\n                        border-left: 1px solid #333333;\r\n                        padding: 14px;\r\n                    }\r\n                    .left {\r\n                        margin-left: 1rem;\r\n                        .next {\r\n                            font-size: 0.7rem;\r\n                        }\r\n                        #next {\r\n                            color: #88DD44;\r\n                            font-size: 2rem;\r\n                        }\r\n                    }\r\n                    .right {\r\n                        margin-left: 3rem;\r\n                        .stake {\r\n                            font-size: 0.7rem;\r\n                        }\r\n                        #stake {\r\n                            color: #FFDD00;\r\n                            font-size: 2rem;\r\n                        }\r\n                    }\r\n                    .button {\r\n                        #CashOut {\r\n                            background-color: #E5AC00;\r\n                            font-family: sans-serif;\r\n                            font-size: 18.2px;\r\n                            text-decoration: none solid rgb(255, 255, 255);\r\n                            text-align: center;\r\n                            word-spacing: 0px;\r\n                            color: white;\r\n                            height: 45px;\r\n                            width: 92px;\r\n                            border: 1px solid #E58A00;\r\n                            padding: 10px 12px 10px 12px;\r\n                            cursor: pointer;\r\n                            transform: none;\r\n                            &:active {\r\n                                -webkit-filter: brightness(70%);\r\n                                -moz-filter: brightness(70%);  \r\n                            }\r\n    \r\n                        }\r\n                    }\r\n                    .col + .col {\r\n                        margin-left: 3rem;\r\n                    }\r\n                    .User-Yam {\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        flex-direction: column;\r\n                        width: 411px;\r\n                        height: 225px;\r\n                        border-top: 1px solid #222222;\r\n                        border-right: 1px solid #333333;\r\n                        border-bottom: 1px solid #444444;\r\n                        border-left: 1px solid #333333;\r\n                        .yam {\r\n                            color: #0ca678; \r\n                            font-size: 30px;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    .notice {\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 5rem;\r\n    \r\n        color: white;\r\n        margin-top: 0.3rem;\r\n        border: 1px solid red;\r\n        img {\r\n            margin-right: 1.6rem;\r\n            width: 30px;\r\n        }\r\n    }  \r\n}\r\n\r\n","@import '../../styles/utils.scss';\r\n\r\n.input-group {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n#img {\r\n    display: none;\r\n}\r\nlabel {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: goldenrod;\r\n    height: 4vh;\r\n    width: 6vw;\r\n    margin-top: 1rem;\r\n}\r\n.list {\r\n    &:nth-child(1) {\r\n        margin-top: 2rem;\r\n    }\r\n}\r\n.list + .list {\r\n    margin-top: 4rem;\r\n}\r\n.list-title {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 2rem;\r\n    width: 100vw;\r\n    height: 80px;\r\n    text-align: center;\r\n    color: white;\r\n}\r\n\r\n.Items {\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .LottoBall-wrapper {\r\n        height: auto;\r\n        color: #f8f9fa;\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: center;\r\n        .LottoBall {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            overflow: hidden;\r\n            float: left;\r\n            width: 44px;\r\n            height: 44px;\r\n            border-radius: 100%;\r\n            &.yellow {\r\n                background-color: #FCC43D;\r\n            }\r\n            &.blue {\r\n                background-color: #8CC6E7;\r\n            }\r\n            &.red {\r\n                background-color: #F18D80;\r\n            }\r\n            &.purple {\r\n                background-color: #A7A2DE;\r\n            }\r\n            &.green {\r\n                background-color: #6BCE9E;\r\n            }\r\n        }\r\n        .LottoBall + .LottoBall {\r\n            margin-left: 2rem;\r\n        }\r\n    }\r\n    .item {\r\n        z-index: 6;\r\n        width: 200px;\r\n        height: 200px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        .front {\r\n            pointer-events: none;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            div {\r\n                font-size: 1.5rem;\r\n                color: white;\r\n                text-align: center;\r\n            }\r\n            #number {\r\n                margin-left: 1rem;\r\n            }\r\n        }\r\n        button {\r\n            margin-right: 2.7rem;\r\n        }\r\n        img {\r\n            width: 150px;\r\n            margin-bottom: 1rem;\r\n        }\r\n        .content-wrapper{\r\n            z-index: 6;\r\n            display: none;\r\n            pointer-events: none;\r\n            font-size: 16px;\r\n            text-decoration: none solid rgb(0, 0, 0);\r\n            background: #495057;\r\n            color: #000000;\r\n            word-spacing: 0px;\r\n            height: 145px;\r\n            width: 322px;\r\n            position: absolute;\r\n            top: 750px;\r\n            .content {\r\n                position: relative;\r\n                font-size: 14px;\r\n                line-height: 16px;\r\n                text-decoration: none solid rgb(242,242,242);\r\n                word-spacing: 0px;\r\n                height: 112px;\r\n                width: 300px;\r\n                padding: 10px 10px 10px 10px;\r\n                float: left;\r\n                display: block;\r\n                clear: both;\r\n                .item-title {\r\n                    color: goldenrod;\r\n                }\r\n                .description {\r\n                    color: white;\r\n                    margin-top: 1.3rem;\r\n                    float: left;\r\n                }\r\n                .description + .description {\r\n                    margin-top: 1.5rem;\r\n                }\r\n            }\r\n        }\r\n        .content-wrapper:after {\r\n            content: '';\r\n            position: absolute;\r\n            border-bottom: 20px solid #495057;\r\n            border-right: 10px solid transparent;\r\n            border-left: 10px solid transparent;\r\n            bottom: 136px;\r\n            left: 130px;\r\n        }\r\n    }\r\n    .item + .item {\r\n        margin-left: 8rem;\r\n    }\r\n}\r\n\r\n.profile-manager {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    .user-profile {\r\n        width: 200px;\r\n    }\r\n    button {\r\n        margin-top: 2rem;\r\n        margin-bottom: 2rem;\r\n    }\r\n    \r\n}\r\n.user-info {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    height: 200px;\r\n    margin-bottom: 4rem;\r\n}   \r\n\r\n.info-list {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    #realname {\r\n        font-size: 2rem;\r\n    }\r\n    #nickname {\r\n        font-size: 2rem;\r\n    }\r\n    #yam {\r\n        font-size: 2rem;\r\n    }\r\n    .info-text {\r\n        margin-left: 1rem;\r\n        font-size: 2rem;\r\n    }\r\n}\r\n\r\n#Lotto-list {\r\n    margin-bottom: 4rem;\r\n}","@import '../../../../src/styles/utils.scss';\r\n\r\n.shop-Allwrapper { \r\n    .title {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: flex-end;\r\n        color: white;\r\n        width: 100vw;\r\n        height: 30vh;\r\n        .title_text {\r\n            text-shadow:0px 0px 1rem red;\r\n            color: red;\r\n            &.color {\r\n                text-shadow:0px 0px 1rem blue;\r\n                color: blue\r\n            }\r\n            font-size: 8rem;\r\n        }\r\n    }\r\n    .Shop-wrapper {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: row;\r\n        height: calc(50vh - 11rem);\r\n        .item {\r\n            z-index: 6;\r\n            width: 300px;\r\n            height: 300px;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            flex-direction: column;\r\n            img {\r\n                pointer-events: none;\r\n                width: 200px;\r\n                margin-bottom: 1rem;\r\n            }\r\n            button {\r\n\r\n            }\r\n            .content-wrapper{\r\n                display: none;\r\n                pointer-events: none;\r\n                font-size: 16px;\r\n                background: #495057;\r\n                color: #000000;\r\n                word-spacing: 0px;\r\n                height: 145px;\r\n                width: 322px;\r\n                position: absolute;\r\n                top: 250px;\r\n                .content {\r\n                    position: relative;\r\n                    font-size: 14px;\r\n                    line-height: 16px;\r\n                    text-decoration: none solid rgb(242,242,242);\r\n                    word-spacing: 0px;\r\n                    height: 112px;\r\n                    width: 300px;\r\n                    padding: 10px 10px 10px 10px;\r\n                    float: left;\r\n                    display: block;\r\n                    clear: both;\r\n                    .item-title {\r\n                        color: goldenrod;\r\n                    }\r\n                    .description {\r\n                        color: white;\r\n                        margin-top: 1.3rem;\r\n                        float: left;\r\n                    }\r\n                    .description + .description {\r\n                        margin-top: 1.5rem;\r\n                    }\r\n                }\r\n            }\r\n            .content-wrapper:after {\r\n                content: '';\r\n                position: absolute;\r\n                border-top: 20px solid #495057;\r\n                border-right: 10px solid transparent;\r\n                border-left: 10px solid transparent;\r\n                bottom: -10px;\r\n                left: 150px;\r\n            }\r\n        }\r\n        .item + .item {\r\n            margin-left: 4rem;\r\n        }\r\n    }\r\n}","body {\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    font-family: \"Noto Sans KR\", sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: black;\r\n  }\r\n  \r\n  // box-sizing 일괄 설정\r\n  * {\r\n    box-sizing: inherit;\r\n    font-family: 'Nanum Gothic', sans-serif;\r\n  }\r\n  \r\n  // 링크 스타일 밑줄 및 색상 무효화\r\n  a {\r\n    text-decoration: inherit;\r\n    color: inherit;\r\n  }\r\n  "]}